# Script pour pousser VITRINE vers GitHub
# Utilise l'API GitHub pour cr√©er le repository et pousser le code

param(
    [string]$RepositoryName = "vitrine-av-uqam",
    [string]$Description = "Application VITRINE - Diagnostic audiovisuel UQAM"
)

Write-Host "üöÄ PUSH VERS GITHUB - VITRINE" -ForegroundColor Cyan
Write-Host "=============================" -ForegroundColor Cyan

# V√©rifier que nous sommes dans le bon r√©pertoire
$currentDir = Get-Location
Write-Host "üìÅ R√©pertoire: $currentDir" -ForegroundColor Yellow

# V√©rifier Git
try {
    $gitVersion = git --version
    Write-Host "‚úÖ Git: $gitVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Git non trouv√©" -ForegroundColor Red
    exit 1
}

# V√©rifier le statut Git
Write-Host "`nüîç V√©rification du statut Git..." -ForegroundColor Green
$status = git status --porcelain
if ($status) {
    Write-Host "üìù Changements non commit√©s d√©tect√©s:" -ForegroundColor Yellow
    Write-Host $status -ForegroundColor Gray
    Write-Host "‚ùå Veuillez commiter les changements avant de continuer" -ForegroundColor Red
    exit 1
}

# V√©rifier si le remote existe d√©j√†
$remote = git remote get-url origin 2>$null
if ($remote) {
    Write-Host "‚úÖ Remote GitHub d√©j√† configur√©: $remote" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è Aucun remote configur√©" -ForegroundColor Yellow
    Write-Host "üìã Instructions manuelles:" -ForegroundColor Cyan
    Write-Host "1. Allez sur https://github.com/new" -ForegroundColor White
    Write-Host "2. Nom du repository: $RepositoryName" -ForegroundColor White
    Write-Host "3. Description: $Description" -ForegroundColor White
    Write-Host "4. Choisir Public ou Private" -ForegroundColor White
    Write-Host "5. NE PAS cocher 'Add a README file'" -ForegroundColor White
    Write-Host "6. Cliquer 'Create repository'" -ForegroundColor White
    Write-Host "7. Copier l'URL du repository" -ForegroundColor White
    
    $remoteUrl = Read-Host "`nEntrez l'URL du repository GitHub (ex: https://github.com/VOTRE_USERNAME/vitrine-av-uqam.git)"
    
    if ($remoteUrl) {
        git remote add origin $remoteUrl
        Write-Host "‚úÖ Remote ajout√©: $remoteUrl" -ForegroundColor Green
    } else {
        Write-Host "‚ùå URL non fournie" -ForegroundColor Red
        exit 1
    }
}

# Push vers GitHub
Write-Host "`nüöÄ Push vers GitHub..." -ForegroundColor Green
try {
    git push -u origin main
    Write-Host "‚úÖ Push r√©ussi!" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erreur lors du push" -ForegroundColor Red
    Write-Host "üí° V√©rifiez que:" -ForegroundColor Yellow
    Write-Host "   - Le repository existe sur GitHub" -ForegroundColor White
    Write-Host "   - Vous √™tes authentifi√©" -ForegroundColor White
    Write-Host "   - L'URL du remote est correcte" -ForegroundColor White
    exit 1
}

# Afficher les URLs
$remote = git remote get-url origin
if ($remote -match "github\.com/([^/]+)/([^/]+)") {
    $username = $matches[1]
    $repo = $matches[2] -replace "\.git$", ""
    
    Write-Host "`n‚úÖ D√âPLOIEMENT R√âUSSI!" -ForegroundColor Green
    Write-Host "üåê Repository: https://github.com/$username/$repo" -ForegroundColor Cyan
    Write-Host "üåê GitHub Pages: https://$username.github.io/$repo/" -ForegroundColor Cyan
    
    Write-Host "`nüìã Prochaines √©tapes:" -ForegroundColor Cyan
    Write-Host "1. Aller sur https://github.com/$username/$repo/settings/pages" -ForegroundColor White
    Write-Host "2. Source: Deploy from a branch" -ForegroundColor White
    Write-Host "3. Branch: main" -ForegroundColor White
    Write-Host "4. Folder: / (root)" -ForegroundColor White
    Write-Host "5. Save" -ForegroundColor White
    Write-Host "6. Attendre 2-3 minutes pour le d√©ploiement" -ForegroundColor White
} else {
    Write-Host "`n‚úÖ Push r√©ussi!" -ForegroundColor Green
    Write-Host "üåê V√©rifiez votre repository GitHub" -ForegroundColor Cyan
}

Write-Host "`nScript termine!" -ForegroundColor Green 